@page "/tramites"
@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject CasoDeUsoTramiteBaja TramiteBaja
@inject CasoDeUsoTramiteConsultaPorEtiqueta TramitesEtiqueta
@inject CasoDeUsoTramiteModificacion TramiteModificacion
@inject CasoDeUsoListarTramite ListarTramites
@inject ISesion Sesion
@inject IServicioAutorizacion autorizacion

<PageTitle>Trámites</PageTitle>

<div>
    @if(sesionActual != null && autorizacion.PoseeElPermiso(sesionActual, "TramiteAlta"))
    {
        <button class = "btn btn-primary" @onclick="()=>AltaTramite()">Agregar Trámite</button>
    }
    <button class = "btn btn-primary" @onclick="()=>MostrarPorEtiqueta()">Filtrar por etiqueta</button>
</div>

<br>

@if(mostrar)
{
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <h1>Elija la etiqueta para filtrar</h1>
            <button class= "btn btn-primary" @onclick="()=>TodosTramites()">Todos los Trámites</button>
            @foreach(string etiqueta in TramiteEtiquetas)
            {
                <button class="btn btn-primary" @onclick="()=>BuscarTramites(etiqueta)">@etiqueta</button>
            }
        </div>
    </div>
}

<style>
    table, th, td {
        border: 1px solid white;
        border-collapse : collapse;
        padding: 10px;
        width: 50%;
    }
    th, td {
        background-color : lightblue;
    }
</style>
<table style>
    <thead>
        <tr>
            <th>ID</th>
            <th>ID de Expediente</th>
            <th>Etiqueta</th>
            <th>Descripción</th>
            <th>Creación</th>
            <th>Última modificación</th>
        </tr>
    </thead>
    <tbody>
        @foreach(Tramite tramite in _lista)
        {
            <tr>
                <td>@tramite.ID</td>
                <td>@tramite.ExpedienteId</td>
                <td>@tramite.Etiqueta</td>
                <td>@tramite.Descripcion</td>
                <td>@tramite.FechaYHoraCreacion</td>
                <td>@tramite.FechaYHoraModificacion</td>
                @if(sesionActual != null && autorizacion.PoseeElPermiso(sesionActual, "TramiteBaja")){
                    <td>
                        <button class= "btn btn-primary" @onclick="()=>ModificarTramite(tramite)">Modificar</button>
                    </td>
                }
                @if(sesionActual != null && autorizacion.PoseeElPermiso(sesionActual, "TramiteModificacion")){
                    <td>
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminado(tramite)">Eliminar</button>
                    </td>
                }
            </tr>
        }
    </tbody>
    
</table>

<Confirmacion @ref="dialogo" OnConfirmado="()=>EliminarTramite(_tramiteEliminado)"/>

@code
{
    bool mostrar = false;
    Usuario? sesionActual;
    List<Tramite> _lista = new List<Tramite>();
    List<string> TramiteEtiquetas = new List<string>
    {
        "Escrito_Presentado",
        "Pase_Estudio",
        "Despacho",
        "Resolucion",
        "Notificacion",
        "Pase_Archivo"
    };

    protected override void OnInitialized()
    {
        TodosTramites();
        this.sesionActual = Sesion.GetSesion();
    }
    
    Confirmacion dialogo = null!;
    Tramite? _tramiteEliminado = null;
    
    private void ConfirmarEliminado(Tramite tramite)
    {
        _tramiteEliminado = tramite;
        dialogo.Mensaje = $"¿Desea eliminar el Trámite {tramite.ID}?";
        dialogo.Mostrar();
    }
    private void EliminarTramite(Tramite tramite)
    {
        if(tramite != null)
        {
            TramiteBaja.Ejecutar(tramite.ID, sesionActual.Id);
            _lista = ListarTramites.Ejecutar();
        }
    }
    private void AltaTramite()
    {
        Navegador.NavigateTo($"TramiteHelp/");
    }
    private void ModificarTramite(Tramite tramite)
    {
        Navegador.NavigateTo($"TramiteHelp/{tramite.ID}");
    }
    private void MostrarPorEtiqueta()
    {
        mostrar = true;
        StateHasChanged();
    }
    private void BuscarTramites(string etiquetaBuscada)
    {
        _lista = TramitesEtiqueta.Ejecutar(etiquetaBuscada);
        mostrar = false;
        StateHasChanged();
    }
    private void TodosTramites()
    {
        _lista = ListarTramites.Ejecutar();
        mostrar = false;
        StateHasChanged();
    }
}