@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject CasoDeUsoUsuarioAlta UsuarioAlta
@inject ISesion Sesion

@if(bloqueInicio)
{
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <h3>Ingrese sus credenciales</h3>
            <input placeholder="Correo electrónico" @bind="_usuario.CorreoElectronico" class="form-control">
            <input placeholder="Contraseña" @bind="_usuario.Contrasena" class="form-control">
            <button class="btn btn-primary" @onclick="ConfirmarLogin">Confirmar</button>
            @if(valido) {<h3>Credenciales incorrectas</h3>}
        </div>
    </div>
}

@if(bloqueRegistro)
{
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <h3>Registrese con sus datos personales</h3>
            <input placeholder="Nombre" @bind="_usuario.Nombre" class="form-control">
            <input placeholder="Apellido" @bind="_usuario.Apellido" class="form-control">
            <input placeholder="Correo electrónico" @bind="_usuario.CorreoElectronico" class="form-control">
            <input placeholder="Contraseña" @bind="_usuario.Contrasena" class="form-control">
            <button class="btn btn-primary" @onclick="ConfirmarRegistro">Confirmar</button>
        </div>
    </div>
}

@code {

    private bool bloqueInicio = false;
    private bool bloqueRegistro = false;
    private bool valido = false;
    [Parameter]
    public EventCallback Seguir{get;set;}
    Usuario _usuario = new Usuario();

    public void IniciarSesion()
    {
        bloqueInicio = true;
        Seguir.InvokeAsync();
    }
    public void Registrarse()
    {
        bloqueRegistro = true;
        Seguir.InvokeAsync();
    }

    private void ConfirmarLogin()
    {
        bloqueInicio = !Sesion.ValidarSesion(_usuario); //Negado por como se planteó el método
    }

    private void ConfirmarRegistro()
    {
        bloqueRegistro = Sesion.Registro(_usuario);
    }

}